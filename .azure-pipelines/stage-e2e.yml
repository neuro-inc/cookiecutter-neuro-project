stages:
- stage: e2e
  displayName: "e2e"
  jobs:
  - job:
    displayName: " "
    strategy:
      matrix:
        Py37-Linux:
          python.version: '3.7'
          image: 'ubuntu-latest'
        Py37-Win64:
          python.version: '3.7'
          image: 'vs2017-win2016'
        Py37-MacOS:
          python.version: '3.7'
          image: 'macos-latest'

    pool:
      vmImage: $[ variables['image'] ]

    timeoutInMinutes: 60

    variables:
      PYTHONUTF8: 1
      e2e.neuro_tag: 'build-$(Build.BuildId)'
      ${{ if in(variables['Build.SourceBranchName'], 'master', 'release') }}:
        e2e.token: $(e2e.token_staging)
        e2e.url: 'https://staging.neu.ro/api/v1'
        e2e.cluster: 'neuro-public'
        e2e.target: 'test_e2e_staging'
      ${{ if notIn(variables['Build.SourceBranchName'], 'master', 'release') }}:
        e2e.token: $(e2e.token_dev)
        e2e.url: 'https://dev.neu.ro/api/v1'
        e2e.cluster: 'default'
        e2e.target: 'test_e2e_dev'


    steps:

    - checkout: self
      clean: true

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: "Use Python $(python.version)"

    - script: |
        python -m pip install -U pip wandb neuromation
        # pip install git+https://github.com/neuromation/platform-client-python.git@master
        make init
      displayName: 'Install dependencies'

    - script: |
        export RUN_EXTRA=--tag=$(e2e.neuro_tag)
        make $(e2e.target)
      displayName: 'Run e2e against $(e2e.url)'
      env:
        CI: true
        COOKIECUTTER_TEST_E2E_TOKEN: $(e2e.token)
        COOKIECUTTER_TEST_E2E_URL: $(e2e.url)
        COOKIECUTTER_TEST_E2E_CLUSTER: $(e2e.cluster)
        COOKIECUTTER_GCP_CONFIG_ENCRYPTION_KEY: $(e2e.enc_key)

    - publish: $(System.DefaultWorkingDirectory)/tests/e2e/output
      artifact: output-$(System.JobName)-$(System.JobId)
      condition: always()

    - script: |
        # Cleanup jobs:
        neuro ps
        export jobs=`neuro -q ps --tag=$(e2e.neuro_tag)`
        echo "Killing stale jobs:\n$jobs\n"
        neuro kill $jobs
        # Cleanup storage:
        make cleanup_e2e_storage
      displayName: 'Cleanup after e2e tests'
      condition:  always()
